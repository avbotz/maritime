/ {
    /* Grabber and shooter servos are ser-110x model */
    dropper_servo: dropper_servo {
        compatible = "pwm-servo";
        pwms = <&pwm1_custom 1 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        min-pulse = <PWM_USEC(850)>;
        max-pulse = <PWM_USEC(2220)>; /* This sus value works */
    };

    /* The grabber servo is the ser-120x model */
    grabber_servo: grabber_servo {
        compatible = "pwm-servo";
        pwms = <&pwm2 2 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        min-pulse = <PWM_USEC(800)>;
        max-pulse = <PWM_USEC(2100)>;
    };

    shooter_servo: shooter_servo {
        compatible = "pwm-servo";
        pwms = <&pwm3 3 PWM_MSEC(20) PWM_POLARITY_NORMAL>;
        min-pulse = <PWM_USEC(850)>;
        max-pulse = <PWM_USEC(2220)>;
    };
};

/* Define timers for the pwm; pwm1 is already defined on pin pe13 by default
 * in zephyr's Nucleo f767zi dts file on their github.
 */
&timers2{
    pwm1_custom: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch1_pa0>;
        pinctrl-names = "default";
    };

    pwm2: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch2_pa1>;
        pinctrl-names = "default";
    };

    pwm3: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch3_pa2>;
        pinctrl-names = "default";
    };
};

/* Communicate with the killswitch as a gpio "button" on pin PH1 */
/ {
    buttons {
        compatible = "gpio-keys";
        killswitch_button: killswitch_button {
            /* Pin PH1 -> gpioh 1 */
            gpios = <&gpioh 1 GPIO_ACTIVE_HIGH>;
            label = "Killswitch modeled as a button";
        };
    };
};

&uart5 {
    pinctrl-0 = <&uart5_tx_pb9 &uart5_rx_pb8>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&usart1 {
    pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&usart2 {
    pinctrl-0 = <&usart2_tx_pd5 &usart2_rx_pd6>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&uart4 {
    pinctrl-0 = <&uart4_tx_pc10 &uart4_rx_pc11>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&i2c1 {
    status = "disabled";
};

&i2c2 {
    pinctrl-0 = <&i2c2_scl_pb10 &i2c2_sda_pb11>;
    pinctrl-names = "default";
    status = "okay";
    clock-frequency = <I2C_BITRATE_STANDARD>;
    ms5837@76 {
        compatible = "meas,ms5837";
        reg = <0x76>;
    };
};


/*
can1 already enabled, alias zephyr,canbus = &can1;

&can1 {
	pinctrl-0 = <&can1_rx_pd0 &can1_tx_pd1>;
	pinctrl-names = "default";
	bus-speed = <125000>;
	status = "okay";
};
*/
